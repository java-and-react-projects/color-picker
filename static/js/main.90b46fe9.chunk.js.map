{"version":3,"sources":["assets/sound1.mp3","components/Shade.js","components/Shades.js","components/ShadeInput.js","App.js","index.js"],"names":["Shade","shade","onColorCopy","useState","copied","setCopied","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","color","audioRef","useRef","shades","setShades","isColor","createShades","Values","console","log","rgbString","current","play","ref","src","require","map","ShadeInput","onInputChange","type","onChange","e","target","value","placeholder","App","setColor","randomColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAAA,OAAe,cAA0B,oC,gICmC1BA,EAhCD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,oBAAS,GADG,mBACjCC,EADiC,KACzBC,EADyB,KAGxCC,qBAAU,WACR,IAAIC,EAMJ,OALe,IAAXH,IACFG,EAAWC,aAAY,WACrBH,GAAU,KACT,OAEE,WACLI,cAAcF,MAEf,CAACH,IAMJ,OACE,cAAC,kBAAD,CAAiBM,KAAMT,EAAMU,YAAaC,OAAQ,kBAJlDP,GAAU,QACVH,KAGA,SACE,qBAAKW,UAAU,QAAQC,MAAO,CAAEC,gBAAiBd,EAAMU,aAAvD,SACGP,EACC,sBAAMS,UAAU,SAAhB,qBAEA,+BAAOZ,EAAMU,mB,gBCKRK,EA5BA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAWC,mBADW,EAEAhB,mBAAS,IAFT,mBAErBiB,EAFqB,KAEbC,EAFa,KAG5Bf,qBAAU,WACJgB,IAAQL,IAAQM,EAAaN,KAChC,CAACA,IAEJ,IAAMM,EAAe,SAACN,GACpB,IACIG,EADiB,IAAII,IAAOP,GACNG,OAAO,GACjCK,QAAQC,IAAIN,EAAO,GAAGO,aAEtBN,EAAUD,IAGNlB,EAAc,WAClBgB,EAASU,QAAQC,QAEnB,OACE,sBAAKhB,UAAU,SAAf,UACE,uBAAOiB,IAAKZ,EAAUa,IAAKC,EAAQ,MAClCZ,EAAOa,KAAI,SAAChC,GAAD,OACV,cAAC,EAAD,CAAOA,MAAOA,EAAOC,YAAaA,W,gBCT3BgC,EAhBI,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,MAAOkB,EAAoB,EAApBA,cAC3B,OACE,sBAAKtB,UAAU,eAAf,UACE,qBAAKA,UAAU,SAAf,kDACA,uBACEuB,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOH,EAAcG,EAAEC,OAAOC,QACxCA,MAAOvB,EACPJ,UAAU,cACV4B,YAAY,WAEd,qBAAK5B,UAAU,SAAf,sDCWS6B,MAlBf,WAAgB,IAAD,EACavC,mBAAS,QADtB,mBACNc,EADM,KACC0B,EADD,KAUb,OAPArC,qBAAU,WACRqC,EAASC,SACR,IAMD,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CAAYI,MAAOA,EAAOkB,cALR,SAACK,GACrBG,EAASH,MAKP,cAAC,EAAD,CAAQvB,MAAOA,QCdrB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90b46fe9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sound1.87567b75.mp3\";","import React, { useState, useEffect } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst Shade = ({ shade, onColorCopy }) => {\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (copied === true) {\n      interval = setInterval(() => {\n        setCopied(false);\n      }, 1500);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [copied]);\n\n  const onCopy = () => {\n    setCopied(true);\n    onColorCopy();\n  };\n  return (\n    <CopyToClipboard text={shade.hexString()} onCopy={() => onCopy()}>\n      <div className=\"shade\" style={{ backgroundColor: shade.hexString() }}>\n        {copied ? (\n          <span className=\"copied\">copied!</span>\n        ) : (\n          <span>{shade.hexString()}</span>\n        )}\n      </div>\n    </CopyToClipboard>\n  );\n};\n\nexport default Shade;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Values from \"values.js\";\nimport Shade from \"./Shade\";\nimport isColor from \"is-color\";\n\nconst Shades = ({ color }) => {\n  const audioRef = useRef();\n  const [shades, setShades] = useState([]);\n  useEffect(() => {\n    if (isColor(color)) createShades(color);\n  }, [color]);\n\n  const createShades = (color) => {\n    const shades_color = new Values(color);\n    let shades = shades_color.shades(1);\n    console.log(shades[0].rgbString());\n\n    setShades(shades);\n  };\n\n  const onColorCopy = () => {\n    audioRef.current.play();\n  };\n  return (\n    <div className=\"shades\">\n      <audio ref={audioRef} src={require(\"../assets/sound1.mp3\")} />\n      {shades.map((shade) => (\n        <Shade shade={shade} onColorCopy={onColorCopy} />\n      ))}\n    </div>\n  );\n};\n\nexport default Shades;\n","import React from \"react\";\n\nconst ShadeInput = ({ color, onInputChange }) => {\n  return (\n    <div className=\"shade-search\">\n      <div className=\"emojis\">ðŸŒˆCOLOR PICKERðŸŒˆ</div>\n      <input\n        type=\"text\"\n        onChange={(e) => onInputChange(e.target.value)}\n        value={color}\n        className=\"shade-input\"\n        placeholder=\"Search\"\n      />\n      <div className=\"emojis\">ðŸŒˆCOLOR PICKERðŸŒˆ</div>\n    </div>\n  );\n};\n\nexport default ShadeInput;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Shades from \"./components/Shades\";\n\nimport randomColor from \"randomcolor\";\nimport ShadeInput from \"./components/ShadeInput\";\nfunction App() {\n  const [color, setColor] = useState(\"#000\");\n\n  useEffect(() => {\n    setColor(randomColor());\n  }, []);\n\n  const onInputChange = (value) => {\n    setColor(value);\n  };\n  return (\n    <div className=\"App\">\n      <ShadeInput color={color} onInputChange={onInputChange} />\n      <Shades color={color} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}